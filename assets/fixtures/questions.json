[
  {
    "id": 1,
    "options": [
      {
        "id": 2,
        "title": "<p><pre>\r\n<code class=\"language-cs\">char[,] A = new char[2, 3];</code></pre>\r\n</p>\r\n"
      },
      {
        "id": 3,
        "title": "<p><pre>\r\n<code class=\"language-cs\">var c = new char[3, 2];</code></pre>\r\n</p>\r\n"
      },
      {
        "id": 4,
        "title": "<p><pre>\r\n<code class=\"language-cs\">var B = new char[2, 3] { { '1', '2', '3' }, { '4', '5', '6' } };</code></pre>\r\n</p>\r\n"
      },
      {
        "id": 5,
        "title": "<p><pre>\r\n<code class=\"language-cs\">var D = new char[{ { '1', '2', '3' }, { '4', '5', '6' } }];</code></pre>\r\n</p>\r\n"
      },
      {
        "id": 6,
        "title": "<p><pre>\r\n<code class=\"language-cs\">Char[,] E = new Char[2, 3] { { 'a', 'b', 'c' }, { 'a', 'b', 'c' } };</code></pre>\r\n</p>\r\n"
      }
    ],
    "title": "<p>Двумерный массив символов из двух строк и трёх столбцов может б</p>\r\n",
    "multiple": false,
    "subject": [
      {
        "id": 10759,
        "name": "основные понятия и операторы языка с#",
        "taggings_count": 6123
      }
    ],
    "code": "",
    "time_last": 1171
  },
  {
    "id": 1306,
    "options": [
      {
        "id": 5168,
        "title": "<p>фрагмент кода содержит ошибку</p>\r\n"
      },
      {
        "id": 5165,
        "title": "<p>100 70 40 10</p>\r\n"
      },
      {
        "id": 5166,
        "title": "<p>100</p>\r\n"
      },
      {
        "id": 5167,
        "title": "<p>тело цикла не выполнится ни разу</p>\r\n"
      }
    ],
    "title": "<p>Каким будет результат работы фрагмента программы?</p>\r\n\r\n<pre>\r\n<code class=\"language-cs\">int x = 100;\r\n        do\r\n        {\r\n          Console.Write(\"{0} \", x);\r\n          x = x - 30;\r\n        }\r\n       while (x &gt; 0);</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n",
    "multiple": false,
    "subject": [
      {
        "id": 10759,
        "name": "основные понятия и операторы языка с#",
        "taggings_count": 6123
      }
    ],
    "code": "",
    "time_last": 1171
  },
  {
    "id": 1327,
    "options": [
      {
        "id": 5248,
        "title": "<p>-1</p>\r\n"
      },
      {
        "id": 5251,
        "title": "<p>true</p>\r\n"
      },
      {
        "id": 5250,
        "title": "<p>null</p>\r\n"
      },
      {
        "id": 5249,
        "title": "<p>0</p>\r\n"
      }
    ],
    "title": "<p>Какое значение вернет&nbsp;метод ReadLine() при достижении конца символьного потока?</p>\r\n",
    "multiple": false,
    "subject": [
      {
        "id": 10761,
        "name": "работа с файловой системой и организация файлового  ввода-вывода данных",
        "taggings_count": 6248
      }
    ],
    "code": "",
    "time_last": 1079
  },
  {
    "id": 1301,
    "options": [
      {
        "id": 5148,
        "title": "<p>CLS</p>\r\n"
      },
      {
        "id": 5147,
        "title": "<p>CTS</p>\r\n"
      },
      {
        "id": 5146,
        "title": "<p>CLR</p>\r\n"
      }
    ],
    "title": "<p>Как называется инфраструктура строгой типизации и проверки кода?</p>\r\n",
    "multiple": false,
    "subject": [
      {
        "id": 10758,
        "name": "платформа microsoft .net framework   и среда visual studio .net",
        "taggings_count": 6342
      }
    ],
    "code": "",
    "time_last": 1034
  },
  {
    "id": 1331,
    "options": [
      {
        "id": 5261,
        "title": "<p>Нет никакой необходимости использовать FileStream. Всегда можно обойтись StreamWriter</p>\r\n"
      },
      {
        "id": 5264,
        "title": "<p>Когда нет возможности получить прямой доступ к файлу</p>\r\n"
      },
      {
        "id": 5263,
        "title": "<p>Когда нужно работать с файлом, как с набором текстовых строк</p>\r\n"
      },
      {
        "id": 5262,
        "title": "<p>Когда нужен произвольный доступ к данным или нет возможности работать с файлом как с текстом</p>\r\n"
      }
    ],
    "title": "<p>Когда для записи файла следует использовать объект FileStream вместо&nbsp;объекта StreamWriter?</p>\r\n",
    "multiple": false,
    "subject": [
      {
        "id": 10761,
        "name": "работа с файловой системой и организация файлового  ввода-вывода данных",
        "taggings_count": 6249
      }
    ],
    "code": "",
    "time_last": 1015
  },
  {
    "id": 664,
    "options": [
      {
        "id": 2754,
        "title": "Тип данных хранящий в себе результат вычисления логического умножения - bool"
      },
      {
        "id": 2752,
        "title": "Оператор \"&&\" используется как \"логическое и\" "
      },
      {
        "id": 2753,
        "title": "Console.WriteLine( true && !false); // Выведет на консоль false"
      },
      {
        "id": 2750,
        "title": "Конъюнкция - бинарная операция"
      },
      {
        "id": 2751,
        "title": "Оператор \"&\" используется как \"логическое и\""
      }
    ],
    "title": "Выберете утверждения относящиеся к конъюнкции(логическому умножению)\r\n",
    "multiple": true,
    "subject": [
      {
        "id": 3687,
        "name": "булева логика и побитовые операции",
        "taggings_count": 1474
      }
    ],
    "code": "",
    "time_last": 1165
  },
  {
    "id": 612,
    "options": [
      {
        "id": 2494,
        "title": "Array.Reverse();"
      },
      {
        "id": 2491,
        "title": "В C# нет встроенных методов сортировки двумерных массивов"
      },
      {
        "id": 2492,
        "title": "Array.Sort();"
      },
      {
        "id": 2493,
        "title": "int[,] A = new int[2010, 2015]; A.Sort();"
      },
      {
        "id": 2490,
        "title": "Array.BinarySearch();"
      }
    ],
    "title": "Наиболее подходящий метод для быстрой рассортировки двумерного массива\r\n",
    "multiple": false,
    "subject": [
      {
        "id": 3680,
        "name": "использование циклов",
        "taggings_count": 1554
      }
    ],
    "code": "",
    "time_last": 1113
  }
]
